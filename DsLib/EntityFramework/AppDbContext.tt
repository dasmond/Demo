<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="$(ProjectDir)/T4/MSSQLHelper.ttinclude"  #>
<#@ include file="$(ProjectDir)/T4/MultipleOutputHelper.ttinclude"  #>
//------------------------------------------------------------------------------
//	此代码由T4模板自动生成
//	生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> By XiaoKe
//	对此文件的更改可能会导致不正确的行为，并且如果重新生成代码，这些更改将会丢失。
//------------------------------------------------------------------------------
using System;
using System.Data.Entity;

namespace <#=Config.EFNameSpace#>
{

    /// <summary>
    /// 数据库上下文：应用程序数据库
    /// </summary>
    public class AppDbContext : DbContext
    {
	
        /// <summary>
        /// 数据库连接和初始化
        /// (App.config 或 Web.config)中配置连接字符串“AppDbContext”
        /// </summary>
        public AppDbContext() : base("name=AppDbContext")
        {
            //设定数据库初始化方式
            //Database.SetInitializer<AppContext>(new DropCreateDatabaseIfModelChanges<AppContext>());
        }
		
        //--------------------------------------------------------------------------------------------

		<#
			List<DbInfo> tl = DbHelper.GetClassInfos();
			foreach (var t in tl)
			{
				//   表名称：t.TableName 
				//   表说明：t.TableDesc
				//   实体类：t.ModelName
				//   业务类：t.BllName 
				//   控制类：t.CtrName
				// 主键名称：t.KeyName
				// 主键类型：t.KeyType
				//   列信息：t.Columns
					//    列类型：t.Columns[i].ColumnType
					//    列名称：t.Columns[i].ColumnName 
					//    列说明：t.Columns[i].Remark 
					//  是否主键：t.Columns[i].IsPrimaryKey 
					//  是否自增：t.Columns[i].IsIdentity 
					//是否允许空：t.Columns[i].IsNullable
					//    小数位：t.Columns[i].Scale 
					//  字符长度：t.Columns[i].CharLength 
					//  字节长度：t.Columns[i].ByteLength
			
		#>
 
        /// <summary> 
        /// 数据实体：<#=t.TableDesc#>
        /// </summary>
        public virtual DbSet<<#=t.ModelName#>> <#=t.ModelNames#> { get; set; }
		
		<#
			}
		#>

        //--------------------------------------------------------------------------------------------


    }

}
